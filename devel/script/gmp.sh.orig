#!/bin/bash
#set -x # devel

PROGRAMNAME="gmp-6.0.0"
ARCHIVENAME="gmp-6.0.0a.tar.bz2"
MIRRORURL="https://ftp.gnu.org/gnu/gmp/$ARCHIVENAME"

TMPDIR=$1         # e.g. /tmp/GnuCommandLineTools
INSTALLPREFIX=$2  # e.g. /Library/Developer/GnuCommandLineTools/
MODE=$3           # 0:install 1:uninstall
SRCDIR=$TMPDIR/src
WORKBENCHDIR=$TMPDIR/workbench
PATCHDIR=$TMPDIR/patches

trap_err()
{
  uninstall
  exit 1
}
trap "trap_err" SIGHUP SIGINT SIGTERM ERR

build()
{
  pushd $WORKBENCHDIR/$PROGRAMNAME 1>/dev/null

  echo "Configuring $PROGRAMNAME"
  ./configure \
    --prefix=$INSTALLPREFIX \
    --enable-cxx \
    --enable-shared=no \
    --enable-static=yes \
    CC=$(which clang) \
    CXX=$(which clang++) \
    ABI=64 \
    1>/dev/null
  if [ ! $? -eq 0  ]; then
    echo "Failed to configure"
    return 2
  fi

  echo "Building $PROGRAMNAME"
  make -j $(sysctl -n machdep.cpu.core_count) 1>/dev/null 2>/dev/null
  if [ ! $? -eq 0 ]; then
    echo "Failed to build sources"
    return 3
  fi

  echo "Installing $PROGRAMNAME"
  make install 1>/dev/null 2>/dev/null
  if [ ! $? -eq 0 ]; then
    echo "Failed to install"
    return 4
  fi

  make clean 1>/dev/null
  popd 1>/dev/null

  return 0
}

uninstall()
{
  if [ ! -d $WORKBENCHDIR/$PROGRAMNAME ]; then
    echo "$PROGRAMNAME is already uninstalled"
    return 0
  fi

  pushd $WORKBENCHDIR/$PROGRAMNAME 1>/dev/null
  if [ -r Makefile ]; then
    echo "Uninstalling $PROGRAMNAME"
    make uninstall 1>/dev/null
    if [ ! $? -eq 0 ]; then
      echo "Failed to uninstall"
      return 1
    fi
  fi
  popd 1>/dev/null

  pushd $WORKBENCHDIR 1>/dev/null
  if [ -d $PROGRAMNAME ]; then
    echo "Removing $PROGRAMNAME workbench directory"
    rm -rf $PROGRAMNAME
  fi
  popd 1>/dev/null

  return 0
}

preparation()
{
  if [ ! -r $SRCDIR/$ARCHIVENAME ]; then
    pushd $SRCDIR 1>/dev/null
    echo "Downloading $ARCHIVENAME"
    curl -fSsLO $MIRRORURL
    if  [ ! $? -eq 0 ]; then
      echo "Failed to download archives"
      return 1
    fi
    popd 1>/dev/null
  fi
  echo "Prepare to build $PROGRAMNAME"
  pushd $WORKBENCHDIR 1>/dev/null
  tar xf $SRCDIR/$ARCHIVENAME
  if [ ! $? -eq 0 ]; then
    echo "Failed to extract archives"
    return 2
  fi
  popd 1>/dev/null
  return 0
}

# main
if [ $MODE -eq 1 ]; then
  uninstall
  exit 0
fi

preparation
build
